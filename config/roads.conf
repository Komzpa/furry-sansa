# stylesheet for geocoding, not rendering

# array that holds hardware-specific options of osm2pgsql
machine = [
    '-C 5000',                     # cache memory size
    '--number-processes 4',         # number of CPU cores to use

    '--unlogged',                   # use unlogged tables on import (requires postgres9.1+)

    '-k',                           # create 'tags' hstore column
    '--hstore-match-only',          # drop everything that's not interesting
    '-s',                           # slim mode
    '-G',                           # multipolygon becomes one polygon in database
]


# array that holds database-specific options
instance = {
    'osm2pgsql.style':  'assets/highway.style',           # default.style for this instance
#   'poly':             'assets/poly/belarus.poly',         # osmosis cutting polygon for dump
    'nodes.cache':      '/home/kom/nodes.cache',           # 17+gb file with linear array of nodes
    'pg_table_prefix':  'highway_osm',                      # table prefix in db
    'pg_database':      'gis',                              # database name
    'pg_user':          'gis',                              # username
    'index_template':   'assets/roads.template.sql',        # indexing queries template

    'pg_timestamp':     '/home/kom/planet_osm_roads_pg.timestamp', # timestamp of database import
    'current_diff':     '/home/kom/roads-changes.osc.gz',         # smaller diff that is applied to dbname

    'dump':             '/home/kom/north-america-latest-new.osm.pbf',           # planet file path
    'external_dumps':   [
        ('north-america-latest.osm.pbf',        'http://download.geofabrik.de/north-america-latest.osm.pbf')
    ],
    'tmpdir':           '/tmp/furry-sansa/',                # where to put temporary files
    'log':              '/tmp/furry-sansa.log',             # log file path
}

osm2pgsql_options = machine[:]
osm2pgsql_options.extend([
    '--prefix ' + instance['pg_table_prefix'],      # table prefix
    '-S '       + instance['osm2pgsql.style'],
    '-d '       + instance['pg_database'],          # postgresql database name
    '-U '       + instance['pg_user'],              # postgresql username
])

if 'nodes.cache' in instance:
    osm2pgsql_options.append(
    '--flat-nodes ' + instance['nodes.cache']       # flat nodes file, used only if needed
    )

osm2pgsql_actions = {
    'create': ' '.join(osm2pgsql_options+ [
        '--create',
        instance['dump']
        ]),
    'append': ' '.join(osm2pgsql_options+ [
        '--append',
        instance['current_diff']
        ]),
    }

pg_database = "dbname=%s user=%s"%(instance['pg_database'], instance['pg_user'])
