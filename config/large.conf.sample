# array that holds hardware-specific options of osm2pgsql
machine = [
    '-C 13000',                     # cache memory size
    '--number-processes 8',         # number of CPU cores to use

    '--unlogged',                   # use unlogged tables on import (requires postgres9.1)

    '-k',                           # create 'tags' hstore column
    '-s',                           # slim mode
    '-G',                           # multipolygon becomes one polygon in database

    '--exclude-invalid-polygon',    # drop all invalid geometries on import
]



# array that holds database-specific options
instance = {
    'osm2pgsql.style':  'assets/osm2pgsql.style',           # default.style for this instance
    'nodes.cache':      '/solid1/nodes.cache',              # 17+gb file with linear array of nodes
    'pg_table_prefix':  'planet_osm',                       # table prefix in db
    'pg_database':      'gis',                              # database name
    'pg_user':          'gis',                              # username
    'planet':           '/home/gis/planet-120801.osm.pbf',  # planet file
    'log':              '/tmp/furry-sansa.log',             # log file url
}

osm2pgsql_options = machine[:]
osm2pgsql_options.extend([
    '--prefix ' + instance['pg_table_prefix'],      # table prefix
    '-S '       + instance['osm2pgsql.style'],
    '-d '       + instance['pg_database'],          # postgresql database name
    '-U '       + instance['pg_user'],              # postgresql username
])

if instance['nodes.cache']:
    osm2pgsql_options.append(
    '--flat-nodes ' + instance['nodes.cache']       # flat nodes file, used only if needed
    )

osm2pgsql_actions = {
    'create': ' '.join(osm2pgsql_options+ [
        '--create',
        instance['planet']
        ])
    }
    
#print ' '.join(osm2pgsql_options)
#'--create',